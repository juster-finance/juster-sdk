schema {
  query: query_root
  subscription: subscription_root
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar bigint

"""
expression to compare columns of type bigint. All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
columns and relationships of "juster.bet"
"""
type juster_bet {
  amount: numeric!

  """An object relationship"""
  event: juster_event!
  event_id: Int!
  id: Int!
  reward: numeric!

  """ABOVE_EQ: ABOVE_EQ\nBELOW: BELOW"""
  side: String!

  """An object relationship"""
  user: juster_user!
  user_id: String!
}

"""
aggregated selection of "juster.bet"
"""
type juster_bet_aggregate {
  aggregate: juster_bet_aggregate_fields
  nodes: [juster_bet!]!
}

"""
aggregate fields of "juster.bet"
"""
type juster_bet_aggregate_fields {
  avg: juster_bet_avg_fields
  count(columns: [juster_bet_select_column!], distinct: Boolean): Int
  max: juster_bet_max_fields
  min: juster_bet_min_fields
  stddev: juster_bet_stddev_fields
  stddev_pop: juster_bet_stddev_pop_fields
  stddev_samp: juster_bet_stddev_samp_fields
  sum: juster_bet_sum_fields
  var_pop: juster_bet_var_pop_fields
  var_samp: juster_bet_var_samp_fields
  variance: juster_bet_variance_fields
}

"""
order by aggregate values of table "juster.bet"
"""
input juster_bet_aggregate_order_by {
  avg: juster_bet_avg_order_by
  count: order_by
  max: juster_bet_max_order_by
  min: juster_bet_min_order_by
  stddev: juster_bet_stddev_order_by
  stddev_pop: juster_bet_stddev_pop_order_by
  stddev_samp: juster_bet_stddev_samp_order_by
  sum: juster_bet_sum_order_by
  var_pop: juster_bet_var_pop_order_by
  var_samp: juster_bet_var_samp_order_by
  variance: juster_bet_variance_order_by
}

"""aggregate avg on columns"""
type juster_bet_avg_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by avg() on columns of table "juster.bet"
"""
input juster_bet_avg_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""
Boolean expression to filter rows from the table "juster.bet". All fields are combined with a logical 'AND'.
"""
input juster_bet_bool_exp {
  _and: [juster_bet_bool_exp]
  _not: juster_bet_bool_exp
  _or: [juster_bet_bool_exp]
  amount: numeric_comparison_exp
  event: juster_event_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  reward: numeric_comparison_exp
  side: String_comparison_exp
  user: juster_user_bool_exp
  user_id: String_comparison_exp
}

"""aggregate max on columns"""
type juster_bet_max_fields {
  amount: numeric
  event_id: Int
  id: Int
  reward: numeric
  side: String
  user_id: String
}

"""
order by max() on columns of table "juster.bet"
"""
input juster_bet_max_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
  side: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type juster_bet_min_fields {
  amount: numeric
  event_id: Int
  id: Int
  reward: numeric
  side: String
  user_id: String
}

"""
order by min() on columns of table "juster.bet"
"""
input juster_bet_min_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
  side: order_by
  user_id: order_by
}

"""
ordering options when selecting data from "juster.bet"
"""
input juster_bet_order_by {
  amount: order_by
  event: juster_event_order_by
  event_id: order_by
  id: order_by
  reward: order_by
  side: order_by
  user: juster_user_order_by
  user_id: order_by
}

"""
primary key columns input for table: "juster.bet"
"""
input juster_bet_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.bet"
"""
enum juster_bet_select_column {
  """column name"""
  amount

  """column name"""
  event_id

  """column name"""
  id

  """column name"""
  reward

  """column name"""
  side

  """column name"""
  user_id
}

"""aggregate stddev on columns"""
type juster_bet_stddev_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by stddev() on columns of table "juster.bet"
"""
input juster_bet_stddev_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate stddev_pop on columns"""
type juster_bet_stddev_pop_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by stddev_pop() on columns of table "juster.bet"
"""
input juster_bet_stddev_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate stddev_samp on columns"""
type juster_bet_stddev_samp_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by stddev_samp() on columns of table "juster.bet"
"""
input juster_bet_stddev_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate sum on columns"""
type juster_bet_sum_fields {
  amount: numeric
  event_id: Int
  id: Int
  reward: numeric
}

"""
order by sum() on columns of table "juster.bet"
"""
input juster_bet_sum_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate var_pop on columns"""
type juster_bet_var_pop_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by var_pop() on columns of table "juster.bet"
"""
input juster_bet_var_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate var_samp on columns"""
type juster_bet_var_samp_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by var_samp() on columns of table "juster.bet"
"""
input juster_bet_var_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""aggregate variance on columns"""
type juster_bet_variance_fields {
  amount: Float
  event_id: Float
  id: Float
  reward: Float
}

"""
order by variance() on columns of table "juster.bet"
"""
input juster_bet_variance_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  reward: order_by
}

"""
columns and relationships of "juster.currencypair"
"""
type juster_currencypair {
  """An array relationship"""
  events(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): [juster_event!]!

  """An aggregated array relationship"""
  events_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): juster_event_aggregate!
  id: Int!

  """An array relationship"""
  quotes(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): [juster_quote!]!

  """An aggregated array relationship"""
  quotes_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): juster_quote_aggregate!
  symbol: String!
}

"""
aggregated selection of "juster.currencypair"
"""
type juster_currencypair_aggregate {
  aggregate: juster_currencypair_aggregate_fields
  nodes: [juster_currencypair!]!
}

"""
aggregate fields of "juster.currencypair"
"""
type juster_currencypair_aggregate_fields {
  avg: juster_currencypair_avg_fields
  count(columns: [juster_currencypair_select_column!], distinct: Boolean): Int
  max: juster_currencypair_max_fields
  min: juster_currencypair_min_fields
  stddev: juster_currencypair_stddev_fields
  stddev_pop: juster_currencypair_stddev_pop_fields
  stddev_samp: juster_currencypair_stddev_samp_fields
  sum: juster_currencypair_sum_fields
  var_pop: juster_currencypair_var_pop_fields
  var_samp: juster_currencypair_var_samp_fields
  variance: juster_currencypair_variance_fields
}

"""
order by aggregate values of table "juster.currencypair"
"""
input juster_currencypair_aggregate_order_by {
  avg: juster_currencypair_avg_order_by
  count: order_by
  max: juster_currencypair_max_order_by
  min: juster_currencypair_min_order_by
  stddev: juster_currencypair_stddev_order_by
  stddev_pop: juster_currencypair_stddev_pop_order_by
  stddev_samp: juster_currencypair_stddev_samp_order_by
  sum: juster_currencypair_sum_order_by
  var_pop: juster_currencypair_var_pop_order_by
  var_samp: juster_currencypair_var_samp_order_by
  variance: juster_currencypair_variance_order_by
}

"""aggregate avg on columns"""
type juster_currencypair_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "juster.currencypair"
"""
input juster_currencypair_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "juster.currencypair". All fields are combined with a logical 'AND'.
"""
input juster_currencypair_bool_exp {
  _and: [juster_currencypair_bool_exp]
  _not: juster_currencypair_bool_exp
  _or: [juster_currencypair_bool_exp]
  events: juster_event_bool_exp
  id: Int_comparison_exp
  quotes: juster_quote_bool_exp
  symbol: String_comparison_exp
}

"""aggregate max on columns"""
type juster_currencypair_max_fields {
  id: Int
  symbol: String
}

"""
order by max() on columns of table "juster.currencypair"
"""
input juster_currencypair_max_order_by {
  id: order_by
  symbol: order_by
}

"""aggregate min on columns"""
type juster_currencypair_min_fields {
  id: Int
  symbol: String
}

"""
order by min() on columns of table "juster.currencypair"
"""
input juster_currencypair_min_order_by {
  id: order_by
  symbol: order_by
}

"""
ordering options when selecting data from "juster.currencypair"
"""
input juster_currencypair_order_by {
  events_aggregate: juster_event_aggregate_order_by
  id: order_by
  quotes_aggregate: juster_quote_aggregate_order_by
  symbol: order_by
}

"""
primary key columns input for table: "juster.currencypair"
"""
input juster_currencypair_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.currencypair"
"""
enum juster_currencypair_select_column {
  """column name"""
  id

  """column name"""
  symbol
}

"""aggregate stddev on columns"""
type juster_currencypair_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "juster.currencypair"
"""
input juster_currencypair_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type juster_currencypair_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "juster.currencypair"
"""
input juster_currencypair_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type juster_currencypair_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "juster.currencypair"
"""
input juster_currencypair_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type juster_currencypair_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "juster.currencypair"
"""
input juster_currencypair_sum_order_by {
  id: order_by
}

"""aggregate var_pop on columns"""
type juster_currencypair_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "juster.currencypair"
"""
input juster_currencypair_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type juster_currencypair_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "juster.currencypair"
"""
input juster_currencypair_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type juster_currencypair_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "juster.currencypair"
"""
input juster_currencypair_variance_order_by {
  id: order_by
}

"""
columns and relationships of "juster.deposit"
"""
type juster_deposit {
  amount_above_eq: numeric!
  amount_below: numeric!

  """An object relationship"""
  event: juster_event!
  event_id: Int!
  id: Int!
  shares: numeric!

  """An object relationship"""
  user: juster_user!
  user_id: String!
}

"""
aggregated selection of "juster.deposit"
"""
type juster_deposit_aggregate {
  aggregate: juster_deposit_aggregate_fields
  nodes: [juster_deposit!]!
}

"""
aggregate fields of "juster.deposit"
"""
type juster_deposit_aggregate_fields {
  avg: juster_deposit_avg_fields
  count(columns: [juster_deposit_select_column!], distinct: Boolean): Int
  max: juster_deposit_max_fields
  min: juster_deposit_min_fields
  stddev: juster_deposit_stddev_fields
  stddev_pop: juster_deposit_stddev_pop_fields
  stddev_samp: juster_deposit_stddev_samp_fields
  sum: juster_deposit_sum_fields
  var_pop: juster_deposit_var_pop_fields
  var_samp: juster_deposit_var_samp_fields
  variance: juster_deposit_variance_fields
}

"""
order by aggregate values of table "juster.deposit"
"""
input juster_deposit_aggregate_order_by {
  avg: juster_deposit_avg_order_by
  count: order_by
  max: juster_deposit_max_order_by
  min: juster_deposit_min_order_by
  stddev: juster_deposit_stddev_order_by
  stddev_pop: juster_deposit_stddev_pop_order_by
  stddev_samp: juster_deposit_stddev_samp_order_by
  sum: juster_deposit_sum_order_by
  var_pop: juster_deposit_var_pop_order_by
  var_samp: juster_deposit_var_samp_order_by
  variance: juster_deposit_variance_order_by
}

"""aggregate avg on columns"""
type juster_deposit_avg_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by avg() on columns of table "juster.deposit"
"""
input juster_deposit_avg_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""
Boolean expression to filter rows from the table "juster.deposit". All fields are combined with a logical 'AND'.
"""
input juster_deposit_bool_exp {
  _and: [juster_deposit_bool_exp]
  _not: juster_deposit_bool_exp
  _or: [juster_deposit_bool_exp]
  amount_above_eq: numeric_comparison_exp
  amount_below: numeric_comparison_exp
  event: juster_event_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  shares: numeric_comparison_exp
  user: juster_user_bool_exp
  user_id: String_comparison_exp
}

"""aggregate max on columns"""
type juster_deposit_max_fields {
  amount_above_eq: numeric
  amount_below: numeric
  event_id: Int
  id: Int
  shares: numeric
  user_id: String
}

"""
order by max() on columns of table "juster.deposit"
"""
input juster_deposit_max_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type juster_deposit_min_fields {
  amount_above_eq: numeric
  amount_below: numeric
  event_id: Int
  id: Int
  shares: numeric
  user_id: String
}

"""
order by min() on columns of table "juster.deposit"
"""
input juster_deposit_min_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
  user_id: order_by
}

"""
ordering options when selecting data from "juster.deposit"
"""
input juster_deposit_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event: juster_event_order_by
  event_id: order_by
  id: order_by
  shares: order_by
  user: juster_user_order_by
  user_id: order_by
}

"""
primary key columns input for table: "juster.deposit"
"""
input juster_deposit_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.deposit"
"""
enum juster_deposit_select_column {
  """column name"""
  amount_above_eq

  """column name"""
  amount_below

  """column name"""
  event_id

  """column name"""
  id

  """column name"""
  shares

  """column name"""
  user_id
}

"""aggregate stddev on columns"""
type juster_deposit_stddev_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by stddev() on columns of table "juster.deposit"
"""
input juster_deposit_stddev_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate stddev_pop on columns"""
type juster_deposit_stddev_pop_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by stddev_pop() on columns of table "juster.deposit"
"""
input juster_deposit_stddev_pop_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate stddev_samp on columns"""
type juster_deposit_stddev_samp_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by stddev_samp() on columns of table "juster.deposit"
"""
input juster_deposit_stddev_samp_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate sum on columns"""
type juster_deposit_sum_fields {
  amount_above_eq: numeric
  amount_below: numeric
  event_id: Int
  id: Int
  shares: numeric
}

"""
order by sum() on columns of table "juster.deposit"
"""
input juster_deposit_sum_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate var_pop on columns"""
type juster_deposit_var_pop_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by var_pop() on columns of table "juster.deposit"
"""
input juster_deposit_var_pop_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate var_samp on columns"""
type juster_deposit_var_samp_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by var_samp() on columns of table "juster.deposit"
"""
input juster_deposit_var_samp_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""aggregate variance on columns"""
type juster_deposit_variance_fields {
  amount_above_eq: Float
  amount_below: Float
  event_id: Float
  id: Float
  shares: Float
}

"""
order by variance() on columns of table "juster.deposit"
"""
input juster_deposit_variance_order_by {
  amount_above_eq: order_by
  amount_below: order_by
  event_id: order_by
  id: order_by
  shares: order_by
}

"""
Stores current level of index and hash of it's config


columns and relationships of "juster.dipdup_state"

"""
type juster_dipdup_state {
  hash: String!
  id: Int!
  index_name: String!

  """operation: operation\nbig_map: big_map\nblock: block\nschema: schema"""
  index_type: String!
  level: Int!
}

"""
aggregated selection of "juster.dipdup_state"
"""
type juster_dipdup_state_aggregate {
  aggregate: juster_dipdup_state_aggregate_fields
  nodes: [juster_dipdup_state!]!
}

"""
aggregate fields of "juster.dipdup_state"
"""
type juster_dipdup_state_aggregate_fields {
  avg: juster_dipdup_state_avg_fields
  count(columns: [juster_dipdup_state_select_column!], distinct: Boolean): Int
  max: juster_dipdup_state_max_fields
  min: juster_dipdup_state_min_fields
  stddev: juster_dipdup_state_stddev_fields
  stddev_pop: juster_dipdup_state_stddev_pop_fields
  stddev_samp: juster_dipdup_state_stddev_samp_fields
  sum: juster_dipdup_state_sum_fields
  var_pop: juster_dipdup_state_var_pop_fields
  var_samp: juster_dipdup_state_var_samp_fields
  variance: juster_dipdup_state_variance_fields
}

"""
order by aggregate values of table "juster.dipdup_state"
"""
input juster_dipdup_state_aggregate_order_by {
  avg: juster_dipdup_state_avg_order_by
  count: order_by
  max: juster_dipdup_state_max_order_by
  min: juster_dipdup_state_min_order_by
  stddev: juster_dipdup_state_stddev_order_by
  stddev_pop: juster_dipdup_state_stddev_pop_order_by
  stddev_samp: juster_dipdup_state_stddev_samp_order_by
  sum: juster_dipdup_state_sum_order_by
  var_pop: juster_dipdup_state_var_pop_order_by
  var_samp: juster_dipdup_state_var_samp_order_by
  variance: juster_dipdup_state_variance_order_by
}

"""aggregate avg on columns"""
type juster_dipdup_state_avg_fields {
  id: Float
  level: Float
}

"""
order by avg() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_avg_order_by {
  id: order_by
  level: order_by
}

"""
Boolean expression to filter rows from the table "juster.dipdup_state". All fields are combined with a logical 'AND'.
"""
input juster_dipdup_state_bool_exp {
  _and: [juster_dipdup_state_bool_exp]
  _not: juster_dipdup_state_bool_exp
  _or: [juster_dipdup_state_bool_exp]
  hash: String_comparison_exp
  id: Int_comparison_exp
  index_name: String_comparison_exp
  index_type: String_comparison_exp
  level: Int_comparison_exp
}

"""aggregate max on columns"""
type juster_dipdup_state_max_fields {
  hash: String
  id: Int
  index_name: String
  index_type: String
  level: Int
}

"""
order by max() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_max_order_by {
  hash: order_by
  id: order_by
  index_name: order_by
  index_type: order_by
  level: order_by
}

"""aggregate min on columns"""
type juster_dipdup_state_min_fields {
  hash: String
  id: Int
  index_name: String
  index_type: String
  level: Int
}

"""
order by min() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_min_order_by {
  hash: order_by
  id: order_by
  index_name: order_by
  index_type: order_by
  level: order_by
}

"""
ordering options when selecting data from "juster.dipdup_state"
"""
input juster_dipdup_state_order_by {
  hash: order_by
  id: order_by
  index_name: order_by
  index_type: order_by
  level: order_by
}

"""
primary key columns input for table: "juster.dipdup_state"
"""
input juster_dipdup_state_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.dipdup_state"
"""
enum juster_dipdup_state_select_column {
  """column name"""
  hash

  """column name"""
  id

  """column name"""
  index_name

  """column name"""
  index_type

  """column name"""
  level
}

"""aggregate stddev on columns"""
type juster_dipdup_state_stddev_fields {
  id: Float
  level: Float
}

"""
order by stddev() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_stddev_order_by {
  id: order_by
  level: order_by
}

"""aggregate stddev_pop on columns"""
type juster_dipdup_state_stddev_pop_fields {
  id: Float
  level: Float
}

"""
order by stddev_pop() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_stddev_pop_order_by {
  id: order_by
  level: order_by
}

"""aggregate stddev_samp on columns"""
type juster_dipdup_state_stddev_samp_fields {
  id: Float
  level: Float
}

"""
order by stddev_samp() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_stddev_samp_order_by {
  id: order_by
  level: order_by
}

"""aggregate sum on columns"""
type juster_dipdup_state_sum_fields {
  id: Int
  level: Int
}

"""
order by sum() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_sum_order_by {
  id: order_by
  level: order_by
}

"""aggregate var_pop on columns"""
type juster_dipdup_state_var_pop_fields {
  id: Float
  level: Float
}

"""
order by var_pop() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_var_pop_order_by {
  id: order_by
  level: order_by
}

"""aggregate var_samp on columns"""
type juster_dipdup_state_var_samp_fields {
  id: Float
  level: Float
}

"""
order by var_samp() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_var_samp_order_by {
  id: order_by
  level: order_by
}

"""aggregate variance on columns"""
type juster_dipdup_state_variance_fields {
  id: Float
  level: Float
}

"""
order by variance() on columns of table "juster.dipdup_state"
"""
input juster_dipdup_state_variance_order_by {
  id: order_by
  level: order_by
}

"""
columns and relationships of "juster.event"
"""
type juster_event {
  """An array relationship"""
  bets(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): [juster_bet!]!

  """An aggregated array relationship"""
  bets_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): juster_bet_aggregate!
  bets_close_time: timestamptz!
  closed_dynamics: numeric
  closed_oracle_time: timestamptz
  closed_rate: numeric
  created_time: timestamptz!

  """An object relationship"""
  currency_pair: juster_currencypair!
  currency_pair_id: Int!

  """An array relationship"""
  deposits(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): [juster_deposit!]!

  """An aggregated array relationship"""
  deposits_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): juster_deposit_aggregate!
  id: Int!
  liquidity_percent: numeric!
  measure_oracle_start_time: timestamptz
  measure_period: bigint!
  pool_above_eq: numeric!
  pool_below: numeric!

  """An array relationship"""
  positions(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): [juster_position!]!

  """An aggregated array relationship"""
  positions_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): juster_position_aggregate!
  start_rate: numeric

  """NEW: NEW\nSTARTED: STARTED\nFINISHED: FINISHED\nCANCELED: CANCELED"""
  status: String!
  target_dynamics: numeric!
  total_bets_amount: numeric!
  total_liquidity_provided: numeric!
  total_liquidity_shares: numeric!

  """ABOVE_EQ: ABOVE_EQ\nBELOW: BELOW"""
  winner_bets: String

  """An array relationship"""
  withdrawals(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): [juster_withdrawal!]!

  """An aggregated array relationship"""
  withdrawals_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): juster_withdrawal_aggregate!
}

"""
aggregated selection of "juster.event"
"""
type juster_event_aggregate {
  aggregate: juster_event_aggregate_fields
  nodes: [juster_event!]!
}

"""
aggregate fields of "juster.event"
"""
type juster_event_aggregate_fields {
  avg: juster_event_avg_fields
  count(columns: [juster_event_select_column!], distinct: Boolean): Int
  max: juster_event_max_fields
  min: juster_event_min_fields
  stddev: juster_event_stddev_fields
  stddev_pop: juster_event_stddev_pop_fields
  stddev_samp: juster_event_stddev_samp_fields
  sum: juster_event_sum_fields
  var_pop: juster_event_var_pop_fields
  var_samp: juster_event_var_samp_fields
  variance: juster_event_variance_fields
}

"""
order by aggregate values of table "juster.event"
"""
input juster_event_aggregate_order_by {
  avg: juster_event_avg_order_by
  count: order_by
  max: juster_event_max_order_by
  min: juster_event_min_order_by
  stddev: juster_event_stddev_order_by
  stddev_pop: juster_event_stddev_pop_order_by
  stddev_samp: juster_event_stddev_samp_order_by
  sum: juster_event_sum_order_by
  var_pop: juster_event_var_pop_order_by
  var_samp: juster_event_var_samp_order_by
  variance: juster_event_variance_order_by
}

"""aggregate avg on columns"""
type juster_event_avg_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by avg() on columns of table "juster.event"
"""
input juster_event_avg_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""
Boolean expression to filter rows from the table "juster.event". All fields are combined with a logical 'AND'.
"""
input juster_event_bool_exp {
  _and: [juster_event_bool_exp]
  _not: juster_event_bool_exp
  _or: [juster_event_bool_exp]
  bets: juster_bet_bool_exp
  bets_close_time: timestamptz_comparison_exp
  closed_dynamics: numeric_comparison_exp
  closed_oracle_time: timestamptz_comparison_exp
  closed_rate: numeric_comparison_exp
  created_time: timestamptz_comparison_exp
  currency_pair: juster_currencypair_bool_exp
  currency_pair_id: Int_comparison_exp
  deposits: juster_deposit_bool_exp
  id: Int_comparison_exp
  liquidity_percent: numeric_comparison_exp
  measure_oracle_start_time: timestamptz_comparison_exp
  measure_period: bigint_comparison_exp
  pool_above_eq: numeric_comparison_exp
  pool_below: numeric_comparison_exp
  positions: juster_position_bool_exp
  start_rate: numeric_comparison_exp
  status: String_comparison_exp
  target_dynamics: numeric_comparison_exp
  total_bets_amount: numeric_comparison_exp
  total_liquidity_provided: numeric_comparison_exp
  total_liquidity_shares: numeric_comparison_exp
  winner_bets: String_comparison_exp
  withdrawals: juster_withdrawal_bool_exp
}

"""aggregate max on columns"""
type juster_event_max_fields {
  bets_close_time: timestamptz
  closed_dynamics: numeric
  closed_oracle_time: timestamptz
  closed_rate: numeric
  created_time: timestamptz
  currency_pair_id: Int
  id: Int
  liquidity_percent: numeric
  measure_oracle_start_time: timestamptz
  measure_period: bigint
  pool_above_eq: numeric
  pool_below: numeric
  start_rate: numeric
  status: String
  target_dynamics: numeric
  total_bets_amount: numeric
  total_liquidity_provided: numeric
  total_liquidity_shares: numeric
  winner_bets: String
}

"""
order by max() on columns of table "juster.event"
"""
input juster_event_max_order_by {
  bets_close_time: order_by
  closed_dynamics: order_by
  closed_oracle_time: order_by
  closed_rate: order_by
  created_time: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_oracle_start_time: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  status: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
  winner_bets: order_by
}

"""aggregate min on columns"""
type juster_event_min_fields {
  bets_close_time: timestamptz
  closed_dynamics: numeric
  closed_oracle_time: timestamptz
  closed_rate: numeric
  created_time: timestamptz
  currency_pair_id: Int
  id: Int
  liquidity_percent: numeric
  measure_oracle_start_time: timestamptz
  measure_period: bigint
  pool_above_eq: numeric
  pool_below: numeric
  start_rate: numeric
  status: String
  target_dynamics: numeric
  total_bets_amount: numeric
  total_liquidity_provided: numeric
  total_liquidity_shares: numeric
  winner_bets: String
}

"""
order by min() on columns of table "juster.event"
"""
input juster_event_min_order_by {
  bets_close_time: order_by
  closed_dynamics: order_by
  closed_oracle_time: order_by
  closed_rate: order_by
  created_time: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_oracle_start_time: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  status: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
  winner_bets: order_by
}

"""
ordering options when selecting data from "juster.event"
"""
input juster_event_order_by {
  bets_aggregate: juster_bet_aggregate_order_by
  bets_close_time: order_by
  closed_dynamics: order_by
  closed_oracle_time: order_by
  closed_rate: order_by
  created_time: order_by
  currency_pair: juster_currencypair_order_by
  currency_pair_id: order_by
  deposits_aggregate: juster_deposit_aggregate_order_by
  id: order_by
  liquidity_percent: order_by
  measure_oracle_start_time: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  positions_aggregate: juster_position_aggregate_order_by
  start_rate: order_by
  status: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
  winner_bets: order_by
  withdrawals_aggregate: juster_withdrawal_aggregate_order_by
}

"""
primary key columns input for table: "juster.event"
"""
input juster_event_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.event"
"""
enum juster_event_select_column {
  """column name"""
  bets_close_time

  """column name"""
  closed_dynamics

  """column name"""
  closed_oracle_time

  """column name"""
  closed_rate

  """column name"""
  created_time

  """column name"""
  currency_pair_id

  """column name"""
  id

  """column name"""
  liquidity_percent

  """column name"""
  measure_oracle_start_time

  """column name"""
  measure_period

  """column name"""
  pool_above_eq

  """column name"""
  pool_below

  """column name"""
  start_rate

  """column name"""
  status

  """column name"""
  target_dynamics

  """column name"""
  total_bets_amount

  """column name"""
  total_liquidity_provided

  """column name"""
  total_liquidity_shares

  """column name"""
  winner_bets
}

"""aggregate stddev on columns"""
type juster_event_stddev_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by stddev() on columns of table "juster.event"
"""
input juster_event_stddev_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate stddev_pop on columns"""
type juster_event_stddev_pop_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by stddev_pop() on columns of table "juster.event"
"""
input juster_event_stddev_pop_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate stddev_samp on columns"""
type juster_event_stddev_samp_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by stddev_samp() on columns of table "juster.event"
"""
input juster_event_stddev_samp_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate sum on columns"""
type juster_event_sum_fields {
  closed_dynamics: numeric
  closed_rate: numeric
  currency_pair_id: Int
  id: Int
  liquidity_percent: numeric
  measure_period: bigint
  pool_above_eq: numeric
  pool_below: numeric
  start_rate: numeric
  target_dynamics: numeric
  total_bets_amount: numeric
  total_liquidity_provided: numeric
  total_liquidity_shares: numeric
}

"""
order by sum() on columns of table "juster.event"
"""
input juster_event_sum_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate var_pop on columns"""
type juster_event_var_pop_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by var_pop() on columns of table "juster.event"
"""
input juster_event_var_pop_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate var_samp on columns"""
type juster_event_var_samp_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by var_samp() on columns of table "juster.event"
"""
input juster_event_var_samp_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""aggregate variance on columns"""
type juster_event_variance_fields {
  closed_dynamics: Float
  closed_rate: Float
  currency_pair_id: Float
  id: Float
  liquidity_percent: Float
  measure_period: Float
  pool_above_eq: Float
  pool_below: Float
  start_rate: Float
  target_dynamics: Float
  total_bets_amount: Float
  total_liquidity_provided: Float
  total_liquidity_shares: Float
}

"""
order by variance() on columns of table "juster.event"
"""
input juster_event_variance_order_by {
  closed_dynamics: order_by
  closed_rate: order_by
  currency_pair_id: order_by
  id: order_by
  liquidity_percent: order_by
  measure_period: order_by
  pool_above_eq: order_by
  pool_below: order_by
  start_rate: order_by
  target_dynamics: order_by
  total_bets_amount: order_by
  total_liquidity_provided: order_by
  total_liquidity_shares: order_by
}

"""
columns and relationships of "juster.position"
"""
type juster_position {
  """An object relationship"""
  event: juster_event!
  event_id: Int!
  id: Int!
  liquidity_provided_above_eq: numeric!
  liquidity_provided_below: numeric!
  reward_above_eq: numeric!
  reward_below: numeric!
  shares: numeric!

  """An object relationship"""
  user: juster_user!
  user_id: String!
  withdrawn: Boolean!
}

"""
aggregated selection of "juster.position"
"""
type juster_position_aggregate {
  aggregate: juster_position_aggregate_fields
  nodes: [juster_position!]!
}

"""
aggregate fields of "juster.position"
"""
type juster_position_aggregate_fields {
  avg: juster_position_avg_fields
  count(columns: [juster_position_select_column!], distinct: Boolean): Int
  max: juster_position_max_fields
  min: juster_position_min_fields
  stddev: juster_position_stddev_fields
  stddev_pop: juster_position_stddev_pop_fields
  stddev_samp: juster_position_stddev_samp_fields
  sum: juster_position_sum_fields
  var_pop: juster_position_var_pop_fields
  var_samp: juster_position_var_samp_fields
  variance: juster_position_variance_fields
}

"""
order by aggregate values of table "juster.position"
"""
input juster_position_aggregate_order_by {
  avg: juster_position_avg_order_by
  count: order_by
  max: juster_position_max_order_by
  min: juster_position_min_order_by
  stddev: juster_position_stddev_order_by
  stddev_pop: juster_position_stddev_pop_order_by
  stddev_samp: juster_position_stddev_samp_order_by
  sum: juster_position_sum_order_by
  var_pop: juster_position_var_pop_order_by
  var_samp: juster_position_var_samp_order_by
  variance: juster_position_variance_order_by
}

"""aggregate avg on columns"""
type juster_position_avg_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by avg() on columns of table "juster.position"
"""
input juster_position_avg_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""
Boolean expression to filter rows from the table "juster.position". All fields are combined with a logical 'AND'.
"""
input juster_position_bool_exp {
  _and: [juster_position_bool_exp]
  _not: juster_position_bool_exp
  _or: [juster_position_bool_exp]
  event: juster_event_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  liquidity_provided_above_eq: numeric_comparison_exp
  liquidity_provided_below: numeric_comparison_exp
  reward_above_eq: numeric_comparison_exp
  reward_below: numeric_comparison_exp
  shares: numeric_comparison_exp
  user: juster_user_bool_exp
  user_id: String_comparison_exp
  withdrawn: Boolean_comparison_exp
}

"""aggregate max on columns"""
type juster_position_max_fields {
  event_id: Int
  id: Int
  liquidity_provided_above_eq: numeric
  liquidity_provided_below: numeric
  reward_above_eq: numeric
  reward_below: numeric
  shares: numeric
  user_id: String
}

"""
order by max() on columns of table "juster.position"
"""
input juster_position_max_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type juster_position_min_fields {
  event_id: Int
  id: Int
  liquidity_provided_above_eq: numeric
  liquidity_provided_below: numeric
  reward_above_eq: numeric
  reward_below: numeric
  shares: numeric
  user_id: String
}

"""
order by min() on columns of table "juster.position"
"""
input juster_position_min_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
  user_id: order_by
}

"""
ordering options when selecting data from "juster.position"
"""
input juster_position_order_by {
  event: juster_event_order_by
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
  user: juster_user_order_by
  user_id: order_by
  withdrawn: order_by
}

"""
primary key columns input for table: "juster.position"
"""
input juster_position_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.position"
"""
enum juster_position_select_column {
  """column name"""
  event_id

  """column name"""
  id

  """column name"""
  liquidity_provided_above_eq

  """column name"""
  liquidity_provided_below

  """column name"""
  reward_above_eq

  """column name"""
  reward_below

  """column name"""
  shares

  """column name"""
  user_id

  """column name"""
  withdrawn
}

"""aggregate stddev on columns"""
type juster_position_stddev_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by stddev() on columns of table "juster.position"
"""
input juster_position_stddev_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate stddev_pop on columns"""
type juster_position_stddev_pop_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by stddev_pop() on columns of table "juster.position"
"""
input juster_position_stddev_pop_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate stddev_samp on columns"""
type juster_position_stddev_samp_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by stddev_samp() on columns of table "juster.position"
"""
input juster_position_stddev_samp_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate sum on columns"""
type juster_position_sum_fields {
  event_id: Int
  id: Int
  liquidity_provided_above_eq: numeric
  liquidity_provided_below: numeric
  reward_above_eq: numeric
  reward_below: numeric
  shares: numeric
}

"""
order by sum() on columns of table "juster.position"
"""
input juster_position_sum_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate var_pop on columns"""
type juster_position_var_pop_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by var_pop() on columns of table "juster.position"
"""
input juster_position_var_pop_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate var_samp on columns"""
type juster_position_var_samp_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by var_samp() on columns of table "juster.position"
"""
input juster_position_var_samp_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""aggregate variance on columns"""
type juster_position_variance_fields {
  event_id: Float
  id: Float
  liquidity_provided_above_eq: Float
  liquidity_provided_below: Float
  reward_above_eq: Float
  reward_below: Float
  shares: Float
}

"""
order by variance() on columns of table "juster.position"
"""
input juster_position_variance_order_by {
  event_id: order_by
  id: order_by
  liquidity_provided_above_eq: order_by
  liquidity_provided_below: order_by
  reward_above_eq: order_by
  reward_below: order_by
  shares: order_by
}

"""
columns and relationships of "juster.quote"
"""
type juster_quote {
  """An object relationship"""
  currency_pair: juster_currencypair!
  currency_pair_id: Int!
  id: Int!
  price: bigint!
  timestamp: timestamptz!
}

"""
aggregated selection of "juster.quote"
"""
type juster_quote_aggregate {
  aggregate: juster_quote_aggregate_fields
  nodes: [juster_quote!]!
}

"""
aggregate fields of "juster.quote"
"""
type juster_quote_aggregate_fields {
  avg: juster_quote_avg_fields
  count(columns: [juster_quote_select_column!], distinct: Boolean): Int
  max: juster_quote_max_fields
  min: juster_quote_min_fields
  stddev: juster_quote_stddev_fields
  stddev_pop: juster_quote_stddev_pop_fields
  stddev_samp: juster_quote_stddev_samp_fields
  sum: juster_quote_sum_fields
  var_pop: juster_quote_var_pop_fields
  var_samp: juster_quote_var_samp_fields
  variance: juster_quote_variance_fields
}

"""
order by aggregate values of table "juster.quote"
"""
input juster_quote_aggregate_order_by {
  avg: juster_quote_avg_order_by
  count: order_by
  max: juster_quote_max_order_by
  min: juster_quote_min_order_by
  stddev: juster_quote_stddev_order_by
  stddev_pop: juster_quote_stddev_pop_order_by
  stddev_samp: juster_quote_stddev_samp_order_by
  sum: juster_quote_sum_order_by
  var_pop: juster_quote_var_pop_order_by
  var_samp: juster_quote_var_samp_order_by
  variance: juster_quote_variance_order_by
}

"""aggregate avg on columns"""
type juster_quote_avg_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by avg() on columns of table "juster.quote"
"""
input juster_quote_avg_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""
Boolean expression to filter rows from the table "juster.quote". All fields are combined with a logical 'AND'.
"""
input juster_quote_bool_exp {
  _and: [juster_quote_bool_exp]
  _not: juster_quote_bool_exp
  _or: [juster_quote_bool_exp]
  currency_pair: juster_currencypair_bool_exp
  currency_pair_id: Int_comparison_exp
  id: Int_comparison_exp
  price: bigint_comparison_exp
  timestamp: timestamptz_comparison_exp
}

"""aggregate max on columns"""
type juster_quote_max_fields {
  currency_pair_id: Int
  id: Int
  price: bigint
  timestamp: timestamptz
}

"""
order by max() on columns of table "juster.quote"
"""
input juster_quote_max_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
  timestamp: order_by
}

"""aggregate min on columns"""
type juster_quote_min_fields {
  currency_pair_id: Int
  id: Int
  price: bigint
  timestamp: timestamptz
}

"""
order by min() on columns of table "juster.quote"
"""
input juster_quote_min_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
  timestamp: order_by
}

"""
ordering options when selecting data from "juster.quote"
"""
input juster_quote_order_by {
  currency_pair: juster_currencypair_order_by
  currency_pair_id: order_by
  id: order_by
  price: order_by
  timestamp: order_by
}

"""
primary key columns input for table: "juster.quote"
"""
input juster_quote_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.quote"
"""
enum juster_quote_select_column {
  """column name"""
  currency_pair_id

  """column name"""
  id

  """column name"""
  price

  """column name"""
  timestamp
}

"""aggregate stddev on columns"""
type juster_quote_stddev_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by stddev() on columns of table "juster.quote"
"""
input juster_quote_stddev_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate stddev_pop on columns"""
type juster_quote_stddev_pop_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by stddev_pop() on columns of table "juster.quote"
"""
input juster_quote_stddev_pop_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate stddev_samp on columns"""
type juster_quote_stddev_samp_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by stddev_samp() on columns of table "juster.quote"
"""
input juster_quote_stddev_samp_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate sum on columns"""
type juster_quote_sum_fields {
  currency_pair_id: Int
  id: Int
  price: bigint
}

"""
order by sum() on columns of table "juster.quote"
"""
input juster_quote_sum_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate var_pop on columns"""
type juster_quote_var_pop_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by var_pop() on columns of table "juster.quote"
"""
input juster_quote_var_pop_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate var_samp on columns"""
type juster_quote_var_samp_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by var_samp() on columns of table "juster.quote"
"""
input juster_quote_var_samp_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""aggregate variance on columns"""
type juster_quote_variance_fields {
  currency_pair_id: Float
  id: Float
  price: Float
}

"""
order by variance() on columns of table "juster.quote"
"""
input juster_quote_variance_order_by {
  currency_pair_id: order_by
  id: order_by
  price: order_by
}

"""
columns and relationships of "juster.user"
"""
type juster_user {
  address: String!

  """An array relationship"""
  bets(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): [juster_bet!]!

  """An aggregated array relationship"""
  bets_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): juster_bet_aggregate!

  """An array relationship"""
  deposits(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): [juster_deposit!]!

  """An aggregated array relationship"""
  deposits_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): juster_deposit_aggregate!

  """An array relationship"""
  positions(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): [juster_position!]!

  """An aggregated array relationship"""
  positions_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): juster_position_aggregate!
  total_bets_amount: numeric!
  total_bets_count: Int!
  total_fees_collected: numeric!
  total_liquidity_provided: numeric!
  total_reward: numeric!
  total_withdrawn: numeric!

  """An array relationship"""
  withdrawals(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): [juster_withdrawal!]!

  """An aggregated array relationship"""
  withdrawals_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): juster_withdrawal_aggregate!
}

"""
aggregated selection of "juster.user"
"""
type juster_user_aggregate {
  aggregate: juster_user_aggregate_fields
  nodes: [juster_user!]!
}

"""
aggregate fields of "juster.user"
"""
type juster_user_aggregate_fields {
  avg: juster_user_avg_fields
  count(columns: [juster_user_select_column!], distinct: Boolean): Int
  max: juster_user_max_fields
  min: juster_user_min_fields
  stddev: juster_user_stddev_fields
  stddev_pop: juster_user_stddev_pop_fields
  stddev_samp: juster_user_stddev_samp_fields
  sum: juster_user_sum_fields
  var_pop: juster_user_var_pop_fields
  var_samp: juster_user_var_samp_fields
  variance: juster_user_variance_fields
}

"""
order by aggregate values of table "juster.user"
"""
input juster_user_aggregate_order_by {
  avg: juster_user_avg_order_by
  count: order_by
  max: juster_user_max_order_by
  min: juster_user_min_order_by
  stddev: juster_user_stddev_order_by
  stddev_pop: juster_user_stddev_pop_order_by
  stddev_samp: juster_user_stddev_samp_order_by
  sum: juster_user_sum_order_by
  var_pop: juster_user_var_pop_order_by
  var_samp: juster_user_var_samp_order_by
  variance: juster_user_variance_order_by
}

"""aggregate avg on columns"""
type juster_user_avg_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by avg() on columns of table "juster.user"
"""
input juster_user_avg_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""
Boolean expression to filter rows from the table "juster.user". All fields are combined with a logical 'AND'.
"""
input juster_user_bool_exp {
  _and: [juster_user_bool_exp]
  _not: juster_user_bool_exp
  _or: [juster_user_bool_exp]
  address: String_comparison_exp
  bets: juster_bet_bool_exp
  deposits: juster_deposit_bool_exp
  positions: juster_position_bool_exp
  total_bets_amount: numeric_comparison_exp
  total_bets_count: Int_comparison_exp
  total_fees_collected: numeric_comparison_exp
  total_liquidity_provided: numeric_comparison_exp
  total_reward: numeric_comparison_exp
  total_withdrawn: numeric_comparison_exp
  withdrawals: juster_withdrawal_bool_exp
}

"""aggregate max on columns"""
type juster_user_max_fields {
  address: String
  total_bets_amount: numeric
  total_bets_count: Int
  total_fees_collected: numeric
  total_liquidity_provided: numeric
  total_reward: numeric
  total_withdrawn: numeric
}

"""
order by max() on columns of table "juster.user"
"""
input juster_user_max_order_by {
  address: order_by
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate min on columns"""
type juster_user_min_fields {
  address: String
  total_bets_amount: numeric
  total_bets_count: Int
  total_fees_collected: numeric
  total_liquidity_provided: numeric
  total_reward: numeric
  total_withdrawn: numeric
}

"""
order by min() on columns of table "juster.user"
"""
input juster_user_min_order_by {
  address: order_by
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""
ordering options when selecting data from "juster.user"
"""
input juster_user_order_by {
  address: order_by
  bets_aggregate: juster_bet_aggregate_order_by
  deposits_aggregate: juster_deposit_aggregate_order_by
  positions_aggregate: juster_position_aggregate_order_by
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
  withdrawals_aggregate: juster_withdrawal_aggregate_order_by
}

"""
primary key columns input for table: "juster.user"
"""
input juster_user_pk_columns_input {
  address: String!
}

"""
select columns of table "juster.user"
"""
enum juster_user_select_column {
  """column name"""
  address

  """column name"""
  total_bets_amount

  """column name"""
  total_bets_count

  """column name"""
  total_fees_collected

  """column name"""
  total_liquidity_provided

  """column name"""
  total_reward

  """column name"""
  total_withdrawn
}

"""aggregate stddev on columns"""
type juster_user_stddev_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by stddev() on columns of table "juster.user"
"""
input juster_user_stddev_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate stddev_pop on columns"""
type juster_user_stddev_pop_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by stddev_pop() on columns of table "juster.user"
"""
input juster_user_stddev_pop_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate stddev_samp on columns"""
type juster_user_stddev_samp_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by stddev_samp() on columns of table "juster.user"
"""
input juster_user_stddev_samp_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate sum on columns"""
type juster_user_sum_fields {
  total_bets_amount: numeric
  total_bets_count: Int
  total_fees_collected: numeric
  total_liquidity_provided: numeric
  total_reward: numeric
  total_withdrawn: numeric
}

"""
order by sum() on columns of table "juster.user"
"""
input juster_user_sum_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate var_pop on columns"""
type juster_user_var_pop_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by var_pop() on columns of table "juster.user"
"""
input juster_user_var_pop_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate var_samp on columns"""
type juster_user_var_samp_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by var_samp() on columns of table "juster.user"
"""
input juster_user_var_samp_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""aggregate variance on columns"""
type juster_user_variance_fields {
  total_bets_amount: Float
  total_bets_count: Float
  total_fees_collected: Float
  total_liquidity_provided: Float
  total_reward: Float
  total_withdrawn: Float
}

"""
order by variance() on columns of table "juster.user"
"""
input juster_user_variance_order_by {
  total_bets_amount: order_by
  total_bets_count: order_by
  total_fees_collected: order_by
  total_liquidity_provided: order_by
  total_reward: order_by
  total_withdrawn: order_by
}

"""
columns and relationships of "juster.withdrawal"
"""
type juster_withdrawal {
  amount: numeric!

  """An object relationship"""
  event: juster_event!
  event_id: Int!
  id: Int!

  """An object relationship"""
  user: juster_user!
  user_id: String!
}

"""
aggregated selection of "juster.withdrawal"
"""
type juster_withdrawal_aggregate {
  aggregate: juster_withdrawal_aggregate_fields
  nodes: [juster_withdrawal!]!
}

"""
aggregate fields of "juster.withdrawal"
"""
type juster_withdrawal_aggregate_fields {
  avg: juster_withdrawal_avg_fields
  count(columns: [juster_withdrawal_select_column!], distinct: Boolean): Int
  max: juster_withdrawal_max_fields
  min: juster_withdrawal_min_fields
  stddev: juster_withdrawal_stddev_fields
  stddev_pop: juster_withdrawal_stddev_pop_fields
  stddev_samp: juster_withdrawal_stddev_samp_fields
  sum: juster_withdrawal_sum_fields
  var_pop: juster_withdrawal_var_pop_fields
  var_samp: juster_withdrawal_var_samp_fields
  variance: juster_withdrawal_variance_fields
}

"""
order by aggregate values of table "juster.withdrawal"
"""
input juster_withdrawal_aggregate_order_by {
  avg: juster_withdrawal_avg_order_by
  count: order_by
  max: juster_withdrawal_max_order_by
  min: juster_withdrawal_min_order_by
  stddev: juster_withdrawal_stddev_order_by
  stddev_pop: juster_withdrawal_stddev_pop_order_by
  stddev_samp: juster_withdrawal_stddev_samp_order_by
  sum: juster_withdrawal_sum_order_by
  var_pop: juster_withdrawal_var_pop_order_by
  var_samp: juster_withdrawal_var_samp_order_by
  variance: juster_withdrawal_variance_order_by
}

"""aggregate avg on columns"""
type juster_withdrawal_avg_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by avg() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_avg_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "juster.withdrawal". All fields are combined with a logical 'AND'.
"""
input juster_withdrawal_bool_exp {
  _and: [juster_withdrawal_bool_exp]
  _not: juster_withdrawal_bool_exp
  _or: [juster_withdrawal_bool_exp]
  amount: numeric_comparison_exp
  event: juster_event_bool_exp
  event_id: Int_comparison_exp
  id: Int_comparison_exp
  user: juster_user_bool_exp
  user_id: String_comparison_exp
}

"""aggregate max on columns"""
type juster_withdrawal_max_fields {
  amount: numeric
  event_id: Int
  id: Int
  user_id: String
}

"""
order by max() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_max_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""aggregate min on columns"""
type juster_withdrawal_min_fields {
  amount: numeric
  event_id: Int
  id: Int
  user_id: String
}

"""
order by min() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_min_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
  user_id: order_by
}

"""
ordering options when selecting data from "juster.withdrawal"
"""
input juster_withdrawal_order_by {
  amount: order_by
  event: juster_event_order_by
  event_id: order_by
  id: order_by
  user: juster_user_order_by
  user_id: order_by
}

"""
primary key columns input for table: "juster.withdrawal"
"""
input juster_withdrawal_pk_columns_input {
  id: Int!
}

"""
select columns of table "juster.withdrawal"
"""
enum juster_withdrawal_select_column {
  """column name"""
  amount

  """column name"""
  event_id

  """column name"""
  id

  """column name"""
  user_id
}

"""aggregate stddev on columns"""
type juster_withdrawal_stddev_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by stddev() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_stddev_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type juster_withdrawal_stddev_pop_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_stddev_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type juster_withdrawal_stddev_samp_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_stddev_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type juster_withdrawal_sum_fields {
  amount: numeric
  event_id: Int
  id: Int
}

"""
order by sum() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_sum_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate var_pop on columns"""
type juster_withdrawal_var_pop_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_var_pop_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type juster_withdrawal_var_samp_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_var_samp_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type juster_withdrawal_variance_fields {
  amount: Float
  event_id: Float
  id: Float
}

"""
order by variance() on columns of table "juster.withdrawal"
"""
input juster_withdrawal_variance_order_by {
  amount: order_by
  event_id: order_by
  id: order_by
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type query_root {
  """
  fetch data from the table: "juster.bet"
  """
  juster_bet(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): [juster_bet!]!

  """
  fetch aggregated fields from the table: "juster.bet"
  """
  juster_bet_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): juster_bet_aggregate!

  """fetch data from the table: "juster.bet" using primary key columns"""
  juster_bet_by_pk(id: Int!): juster_bet

  """
  fetch data from the table: "juster.currencypair"
  """
  juster_currencypair(
    """distinct select on columns"""
    distinct_on: [juster_currencypair_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_currencypair_order_by!]

    """filter the rows returned"""
    where: juster_currencypair_bool_exp
  ): [juster_currencypair!]!

  """
  fetch aggregated fields from the table: "juster.currencypair"
  """
  juster_currencypair_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_currencypair_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_currencypair_order_by!]

    """filter the rows returned"""
    where: juster_currencypair_bool_exp
  ): juster_currencypair_aggregate!

  """
  fetch data from the table: "juster.currencypair" using primary key columns
  """
  juster_currencypair_by_pk(id: Int!): juster_currencypair

  """
  fetch data from the table: "juster.deposit"
  """
  juster_deposit(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): [juster_deposit!]!

  """
  fetch aggregated fields from the table: "juster.deposit"
  """
  juster_deposit_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): juster_deposit_aggregate!

  """fetch data from the table: "juster.deposit" using primary key columns"""
  juster_deposit_by_pk(id: Int!): juster_deposit

  """
  fetch data from the table: "juster.dipdup_state"
  """
  juster_dipdup_state(
    """distinct select on columns"""
    distinct_on: [juster_dipdup_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_dipdup_state_order_by!]

    """filter the rows returned"""
    where: juster_dipdup_state_bool_exp
  ): [juster_dipdup_state!]!

  """
  fetch aggregated fields from the table: "juster.dipdup_state"
  """
  juster_dipdup_state_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_dipdup_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_dipdup_state_order_by!]

    """filter the rows returned"""
    where: juster_dipdup_state_bool_exp
  ): juster_dipdup_state_aggregate!

  """
  fetch data from the table: "juster.dipdup_state" using primary key columns
  """
  juster_dipdup_state_by_pk(id: Int!): juster_dipdup_state

  """
  fetch data from the table: "juster.event"
  """
  juster_event(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): [juster_event!]!

  """
  fetch aggregated fields from the table: "juster.event"
  """
  juster_event_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): juster_event_aggregate!

  """fetch data from the table: "juster.event" using primary key columns"""
  juster_event_by_pk(id: Int!): juster_event

  """
  fetch data from the table: "juster.position"
  """
  juster_position(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): [juster_position!]!

  """
  fetch aggregated fields from the table: "juster.position"
  """
  juster_position_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): juster_position_aggregate!

  """fetch data from the table: "juster.position" using primary key columns"""
  juster_position_by_pk(id: Int!): juster_position

  """
  fetch data from the table: "juster.quote"
  """
  juster_quote(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): [juster_quote!]!

  """
  fetch aggregated fields from the table: "juster.quote"
  """
  juster_quote_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): juster_quote_aggregate!

  """fetch data from the table: "juster.quote" using primary key columns"""
  juster_quote_by_pk(id: Int!): juster_quote

  """
  fetch data from the table: "juster.user"
  """
  juster_user(
    """distinct select on columns"""
    distinct_on: [juster_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_user_order_by!]

    """filter the rows returned"""
    where: juster_user_bool_exp
  ): [juster_user!]!

  """
  fetch aggregated fields from the table: "juster.user"
  """
  juster_user_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_user_order_by!]

    """filter the rows returned"""
    where: juster_user_bool_exp
  ): juster_user_aggregate!

  """fetch data from the table: "juster.user" using primary key columns"""
  juster_user_by_pk(address: String!): juster_user

  """
  fetch data from the table: "juster.withdrawal"
  """
  juster_withdrawal(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): [juster_withdrawal!]!

  """
  fetch aggregated fields from the table: "juster.withdrawal"
  """
  juster_withdrawal_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): juster_withdrawal_aggregate!

  """
  fetch data from the table: "juster.withdrawal" using primary key columns
  """
  juster_withdrawal_by_pk(id: Int!): juster_withdrawal
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "juster.bet"
  """
  juster_bet(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): [juster_bet!]!

  """
  fetch aggregated fields from the table: "juster.bet"
  """
  juster_bet_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_bet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_bet_order_by!]

    """filter the rows returned"""
    where: juster_bet_bool_exp
  ): juster_bet_aggregate!

  """fetch data from the table: "juster.bet" using primary key columns"""
  juster_bet_by_pk(id: Int!): juster_bet

  """
  fetch data from the table: "juster.currencypair"
  """
  juster_currencypair(
    """distinct select on columns"""
    distinct_on: [juster_currencypair_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_currencypair_order_by!]

    """filter the rows returned"""
    where: juster_currencypair_bool_exp
  ): [juster_currencypair!]!

  """
  fetch aggregated fields from the table: "juster.currencypair"
  """
  juster_currencypair_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_currencypair_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_currencypair_order_by!]

    """filter the rows returned"""
    where: juster_currencypair_bool_exp
  ): juster_currencypair_aggregate!

  """
  fetch data from the table: "juster.currencypair" using primary key columns
  """
  juster_currencypair_by_pk(id: Int!): juster_currencypair

  """
  fetch data from the table: "juster.deposit"
  """
  juster_deposit(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): [juster_deposit!]!

  """
  fetch aggregated fields from the table: "juster.deposit"
  """
  juster_deposit_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_deposit_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_deposit_order_by!]

    """filter the rows returned"""
    where: juster_deposit_bool_exp
  ): juster_deposit_aggregate!

  """fetch data from the table: "juster.deposit" using primary key columns"""
  juster_deposit_by_pk(id: Int!): juster_deposit

  """
  fetch data from the table: "juster.dipdup_state"
  """
  juster_dipdup_state(
    """distinct select on columns"""
    distinct_on: [juster_dipdup_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_dipdup_state_order_by!]

    """filter the rows returned"""
    where: juster_dipdup_state_bool_exp
  ): [juster_dipdup_state!]!

  """
  fetch aggregated fields from the table: "juster.dipdup_state"
  """
  juster_dipdup_state_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_dipdup_state_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_dipdup_state_order_by!]

    """filter the rows returned"""
    where: juster_dipdup_state_bool_exp
  ): juster_dipdup_state_aggregate!

  """
  fetch data from the table: "juster.dipdup_state" using primary key columns
  """
  juster_dipdup_state_by_pk(id: Int!): juster_dipdup_state

  """
  fetch data from the table: "juster.event"
  """
  juster_event(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): [juster_event!]!

  """
  fetch aggregated fields from the table: "juster.event"
  """
  juster_event_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_event_order_by!]

    """filter the rows returned"""
    where: juster_event_bool_exp
  ): juster_event_aggregate!

  """fetch data from the table: "juster.event" using primary key columns"""
  juster_event_by_pk(id: Int!): juster_event

  """
  fetch data from the table: "juster.position"
  """
  juster_position(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): [juster_position!]!

  """
  fetch aggregated fields from the table: "juster.position"
  """
  juster_position_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_position_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_position_order_by!]

    """filter the rows returned"""
    where: juster_position_bool_exp
  ): juster_position_aggregate!

  """fetch data from the table: "juster.position" using primary key columns"""
  juster_position_by_pk(id: Int!): juster_position

  """
  fetch data from the table: "juster.quote"
  """
  juster_quote(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): [juster_quote!]!

  """
  fetch aggregated fields from the table: "juster.quote"
  """
  juster_quote_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_quote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_quote_order_by!]

    """filter the rows returned"""
    where: juster_quote_bool_exp
  ): juster_quote_aggregate!

  """fetch data from the table: "juster.quote" using primary key columns"""
  juster_quote_by_pk(id: Int!): juster_quote

  """
  fetch data from the table: "juster.user"
  """
  juster_user(
    """distinct select on columns"""
    distinct_on: [juster_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_user_order_by!]

    """filter the rows returned"""
    where: juster_user_bool_exp
  ): [juster_user!]!

  """
  fetch aggregated fields from the table: "juster.user"
  """
  juster_user_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_user_order_by!]

    """filter the rows returned"""
    where: juster_user_bool_exp
  ): juster_user_aggregate!

  """fetch data from the table: "juster.user" using primary key columns"""
  juster_user_by_pk(address: String!): juster_user

  """
  fetch data from the table: "juster.withdrawal"
  """
  juster_withdrawal(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): [juster_withdrawal!]!

  """
  fetch aggregated fields from the table: "juster.withdrawal"
  """
  juster_withdrawal_aggregate(
    """distinct select on columns"""
    distinct_on: [juster_withdrawal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [juster_withdrawal_order_by!]

    """filter the rows returned"""
    where: juster_withdrawal_bool_exp
  ): juster_withdrawal_aggregate!

  """
  fetch data from the table: "juster.withdrawal" using primary key columns
  """
  juster_withdrawal_by_pk(id: Int!): juster_withdrawal
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}
